import{_ as s,c as a,o as i,U as e}from"./chunks/framework.wPUtFRbT.js";const l="/my-docs/assets/1705032547414.7ThxZVIO.png",t="/my-docs/assets/1705033201441.YPaQ77h1.png",n="/my-docs/assets/1705039260990.0_Q10y6C.png",p="/my-docs/assets/1705039310676.RWyD23Xu.png",o="/my-docs/assets/1705039450602.wF_wm7fj.png",h="/my-docs/assets/1705039502552.niFdaDix.png",f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"博客/Algolia 文档搜索功能添加.md","filePath":"博客/Algolia 文档搜索功能添加.md","lastUpdated":1705040931000}'),r={name:"博客/Algolia 文档搜索功能添加.md"},c=e('<p>最近折腾 <code>VitePress</code>，想给自己的博客添加一个 <code>algolia</code>搜索，</p><blockquote><p>发现网上很多文章，还是基于老版本的 <code>vitepress</code>使用 <code>github-Actions</code>的CI自动爬取数据来实时更新</p></blockquote><p>目前最新版本 <code>VitePress</code> 支持使用 <a href="https://link.zhihu.com/?target=https%3A//vitepress.dev/reference/default-theme-search%23algolia-search" target="_blank" rel="noreferrer">Algolia DocSearch</a> 搜索您的文档站点</p><p>避免大家被误导，所以写这个文章，避免踩坑</p><h2 id="使用-algolia" tabindex="-1">使用 Algolia <a class="header-anchor" href="#使用-algolia" aria-label="Permalink to &quot;使用 Algolia&quot;">​</a></h2><h3 id="_1-申请使用algolia-docsearch" tabindex="-1">1. 申请使用Algolia DocSearch <a class="header-anchor" href="#_1-申请使用algolia-docsearch" aria-label="Permalink to &quot;1. 申请使用Algolia DocSearch&quot;">​</a></h3><p><a href="https://link.zhihu.com/?target=https%3A//docsearch.algolia.com/apply/" target="_blank" rel="noreferrer">docsearch 申请地址</a></p><p><img src="'+l+'" alt="1705032547414"></p><p>这里有几点需要注意：</p><ul><li>您必须是该网站的所有者，或至少有更新其内容的权限</li><li>你的网站必须是公开的</li><li>你的网站必须是一个开源项目或技术博客的技术文档，不授权于商业内容</li><li>你的网站必须到生产环境</li></ul><hr><p><strong>申请成功后，Algolia官方会给你填写的邮箱发送邮件，提醒你接受邀请，申请成功的邮件如下：</strong></p><p><img src="'+t+'" alt="1705033201441"></p><p><strong>点击该地址会让你注册账号登录Algolia，或者第三方选项登录，我个人是以 <code>GitHub</code> 身份登录</strong></p><hr><p><strong>成功登录会进入控制台页面，之后来到 Applications 这里，去创建一个应用，以我自己的为例，下图已经创建好了「vitepress」。</strong></p><blockquote><p>注意 如果是点击邮件里的邀请地址，Algolia会默认创建好一个 <code>应用</code>，如果没有，自己单独创建一个即可。 :::</p></blockquote><p><img src="'+n+'" alt="1705039260990"></p><hr><h3 id="_2-配置" tabindex="-1">2. 配置 <a class="header-anchor" href="#_2-配置" aria-label="Permalink to &quot;2. 配置&quot;">​</a></h3><p>VitePress 支持使用 Algolia DocSearch 搜索您的文档站点，只需要在 <code>.vitepress/config.js</code>，配置Algolia参数即可</p><h3 id="_2-1-获取应用的key" tabindex="-1">2.1 获取应用的key <a class="header-anchor" href="#_2-1-获取应用的key" aria-label="Permalink to &quot;2.1 获取应用的key&quot;">​</a></h3><p>如图下所示，进入 API Keys 页面。</p><p><img src="'+p+'" alt="1705039310676"></p><p>进入该页面后，你会看见 <code>Application ID</code>和 <code>Search API Key</code>，这个2个参数就是我们需要在 <code>.vitepress/config.js</code>配置文件的参数</p><p><img src="'+o+'" alt="1705039450602"></p><p>而 <code>indexName</code>参数可以在邮件查看，也可以在控制台搜索里查看</p><p><img src="'+h+`" alt="1705039502552"></p><hr><h3 id="_2-2-vitepress配置algolia" tabindex="-1">2.2 VitePress配置Algolia <a class="header-anchor" href="#_2-2-vitepress配置algolia" aria-label="Permalink to &quot;2.2 VitePress配置Algolia&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vitepress&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  themeConfig: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    search: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      provider: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;algolia&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      options: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        appId: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;...&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 你的 Application ID</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        apiKey: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;...&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 你的Search API Key</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        indexName: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;...&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 你的indexName</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>更多的配置可以查看 <code>docsearch</code> <a href="https://link.zhihu.com/?target=https%3A//docsearch.algolia.com/docs/api" target="_blank" rel="noreferrer">API Reference</a></p><hr><h2 id="结尾" tabindex="-1">结尾 <a class="header-anchor" href="#结尾" aria-label="Permalink to &quot;结尾&quot;">​</a></h2><p>其实 <code>vitepress</code> 官方的本地搜索，已经很不错了，但algolia搜索更全面和强大一些。\`</p>`,35),d=[c];function k(g,E,_,m,y,A){return i(),a("div",null,d)}const b=s(r,[["render",k]]);export{f as __pageData,b as default};
